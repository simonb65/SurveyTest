@model SurveyTest.Models.QuestionDef

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)
    <fieldset>
        <legend>Question Definition</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.Id, "ID") : @Html.DisplayTextFor(model => model.Id)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.FormatType, "Question Format Type") : @Html.DisplayTextFor(model => model.FormatType)
        </div>

       <div class="editor-label">
            @Html.LabelFor(model => model.Name)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Name)
            @Html.ValidationMessageFor(model => model.Name)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Description)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Description)
            @Html.ValidationMessageFor(model => model.Description)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.PromptText, "Prompt")
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.PromptText)
            @Html.ValidationMessageFor(model => model.PromptText)
        </div>

        @Html.HiddenFor(model => model.FormatType)
        @Html.EditorFor(model => model)

        <p>
            <input type="submit" value="Save" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script  type="text/javascript">
    function AddOption() {
        $('#AddOpt').click(function () {
            var optTxt = $('#NewOptTxt');
            var optVal = $('#NewOptValue');
            $.post('@Url.Action("AddOption", new { id = Model.Id })', { text: optTxt.val(), value: optVal.val() }, function () { location.reload(true); });
        });
    };

    function MoveOption(optIdx, direction) {
        $.post('@Url.Action("MoveOption", new { id = Model.Id })', { optIdx: optIdx, direction: direction }, function () { location.reload(true); });
    };

    function RemoveOption(optIdx) {
        $.post('@Url.Action("RemoveOption", new { id = Model.Id })', { optIdx: optIdx }, function () { location.reload(true); });
    };
</script>
